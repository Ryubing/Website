---
import Consts from "../lib/consts"
import CtaButton from "./ctabutton.astro"

const uaString = Astro.request.headers.get("user-agent") || ""

export const PLATFORM_LINKS = {
    windows: {
        href: Consts.WINDOWS_URL,
    },
    macOS: {
        href: Consts.MACOS_URL,
    },
    linux: {
        href: Consts.LINUX_URL,
    },
    linuxarm: {
        href: Consts.LINUXARM_URL,
    },
    unknown: {
        href: "/download",
    },
}
type PlaformLinksType = Record<string, { store?: string; href: string }>

let os: string
if (uaString.includes("Windows")) {
    os = "windows"
} else if (uaString.includes("Macintosh")) {
    os = "macOS"
} else if (uaString.includes("ARM")) {
    os = "linuxarm"
} else if (uaString.includes("Linux")) {
    os = "linux"
} else {
    os = "unknown"
}

const { href } = (PLATFORM_LINKS as PlaformLinksType)[os]

interface Props {
    isDownloadPage?: boolean
}
const { isDownloadPage = false } = Astro.props
---

<div class="cta">
    {
        // If we're on the download page, don't show the download button if the OS is unknown
        // as it only leads to the download page
        !(isDownloadPage && os === "unknown") && (
            <div class="dl-button">
                <CtaButton label="Download" href={href} primary />
            </div>
        )
    }
    <CtaButton label="Join discord" href="https://discord.gg/ryujinx" />
</div>
<style lang="scss">
    .cta {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: flex-start;
        margin-top: 2rem;
        margin-bottom: 2rem;
        gap: 2rem;

        @media (max-width: 768px) {
            flex-direction: column;
            align-items: center;
        }
    }

    .dl-button {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

</style>
